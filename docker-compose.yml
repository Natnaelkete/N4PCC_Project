version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: n4pcc_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: collaboration_platform
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user']
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: n4pcc_app
    ports:
      - '4000:4000'
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/collaboration_platform
      PORT: 4000
      NODE_ENV: development
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change-this-in-production}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./audit.log:/app/audit.log
    command: ['bun', 'run', '--watch', 'src/index.ts']

volumes:
  postgres_data:
